{"ast":null,"code":"import _objectSpread from \"/home/tonii/My_Folder/Developer/Project/chatbot_matkul_network/rag-chat/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport { checkQuote } from '../util/check-quote.js';\nimport { formatLinkAsAutolink } from '../util/format-link-as-autolink.js';\nlink.peek = linkPeek;\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state);\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe';\n  const tracker = state.createTracker(info);\n  /** @type {Exit} */\n  let exit;\n  /** @type {Exit} */\n  let subexit;\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack;\n    state.stack = [];\n    exit = state.enter('autolink');\n    let value = tracker.move('<');\n    value += tracker.move(state.containerPhrasing(node, _objectSpread({\n      before: value,\n      after: '>'\n    }, tracker.current())));\n    value += tracker.move('>');\n    exit();\n    state.stack = stack;\n    return value;\n  }\n  exit = state.enter('link');\n  subexit = state.enter('label');\n  let value = tracker.move('[');\n  value += tracker.move(state.containerPhrasing(node, _objectSpread({\n    before: value,\n    after: ']('\n  }, tracker.current())));\n  value += tracker.move('](');\n  subexit();\n  if (\n  // If there’s no url but there is a title…\n  !node.url && node.title ||\n  // If there are control characters or whitespace.\n  /[\\0- \\u007F]/.test(node.url)) {\n    subexit = state.enter('destinationLiteral');\n    value += tracker.move('<');\n    value += tracker.move(state.safe(node.url, _objectSpread({\n      before: value,\n      after: '>'\n    }, tracker.current())));\n    value += tracker.move('>');\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw');\n    value += tracker.move(state.safe(node.url, _objectSpread({\n      before: value,\n      after: node.title ? ' ' : ')'\n    }, tracker.current())));\n  }\n  subexit();\n  if (node.title) {\n    subexit = state.enter(\"title\".concat(suffix));\n    value += tracker.move(' ' + quote);\n    value += tracker.move(state.safe(node.title, _objectSpread({\n      before: value,\n      after: quote\n    }, tracker.current())));\n    value += tracker.move(quote);\n    subexit();\n  }\n  value += tracker.move(')');\n  exit();\n  return value;\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '[';\n}","map":{"version":3,"names":["checkQuote","formatLinkAsAutolink","link","peek","linkPeek","node","_","state","info","quote","suffix","tracker","createTracker","exit","subexit","stack","enter","value","move","containerPhrasing","_objectSpread","before","after","current","url","title","test","safe","concat"],"sources":["/home/tonii/node_modules/mdast-util-to-markdown/lib/handle/link.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}